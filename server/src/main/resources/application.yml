server:
  port: 8080
kafka:
  topic:
    position: position2
mongodb:
  database: flight
spring:
  data:
    mongodb:
      auto-index-creation: true
  security:
    oauth2:
      client:
        registration:
          github:
            clientId: d21bebcaecf9b5c34da4
            clientSecret: 54ae40bd5b33cbacc74db3de79e93308cba4b22e
            redirectUri: "{baseUrl}/api/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user
  kafka:
    bootstrap-servers: localhost:9092
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.LongSerializer
#      value-serializer: com.supersidor.flightmap.kafka.PositionSerializer
#      compression-type: gzip
#    consumer:
#      key-deserializer: org.apache.kafka.common.serialization.LongDeserializer
#      value-deserializer: com.supersidor.flightmap.kafka.PositionDeserializer
#      auto-offset-reset: earliest
#      enable-auto-commit: false
#      properties:
#        specific.avro.reader: true

#  cache:
#    jcache:
#      config: classpath:ehcache.xml
app:
  auth:
    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
    tokenExpirationMsec: 864000000
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - http://localhost:8080
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
